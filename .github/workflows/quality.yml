name: Security & Quality Checks

# Note: Basic code quality (lint, format) is ensured by Husky pre-commit/pre-push hooks
# This workflow focuses on security audits and advanced quality metrics
# Runs on PR validation and weekly security audits

on:
  pull_request:
    branches: [master, staging]
  schedule:
    - cron: '0 2 * * 1' # Weekly on Monday at 2 AM

jobs:
  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Run security audit
        run: pnpm audit

      - name: Run dependency check
        run: pnpm audit --fix

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Generate Prisma Client
        run: pnpm prisma generate
        env:
          DATABASE_URL: postgresql://dummy:dummy@localhost:5432/dummy
          DIRECT_URL: postgresql://dummy:dummy@localhost:5432/dummy

  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_USER: test_user
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Generate Prisma Client
        run: pnpm prisma generate
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
          DIRECT_URL: postgresql://test_user:test_password@localhost:5432/test_db

      - name: Run database migrations
        run: pnpm prisma migrate deploy
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
          DIRECT_URL: postgresql://test_user:test_password@localhost:5432/test_db

      - name: Run tests with coverage
        run: pnpm run test:cov
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
          DIRECT_URL: postgresql://test_user:test_password@localhost:5432/test_db
          NODE_ENV: test
          JWT_SECRET: test_jwt_secret
          JWT_REFRESH_SECRET: test_jwt_refresh_secret

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
